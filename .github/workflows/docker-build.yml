name: Build and Push Phoenix App

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
    paths-ignore:
      - 'k8s/**'
      - '.github/**'
      - '*.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'k8s/**'
      - '.github/**'
      - '*.md'
      - 'docs/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Update Kubernetes manifests
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     echo "Updating Kubernetes manifests with image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}"
      #     # Optional: Add script to update kustomization.yaml with the new image tag
      #     # This could be a separate workflow or job that updates your k8s repo

      # - name: Notify deployment
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     echo "::notice::New image pushed: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}"